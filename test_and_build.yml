parameters:
- name: sonar_org     #'isaac-revature-training-uta'
  type: string
- name: sonar_key     #'revature-training-uta_team_e_p1_webapp'
  type: string
- name: sonar_project #'team_e_p1_webapp'
  type: string
- name: classes_dir   #'src/main/java/com/revature/airline/controller,dtos,repos,serializers,services,servlets,utils'
  type: string
  default: ''
- name: artifact_name #'p1-webapp-0.9.war'
  type: string


steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: {{ sonar_org }}
    scannerMode: 'Other'
    extraProperties: |
      # Additional properties that will be passed to the scanner,
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.projectKey={{ sonar_key }} 
      sonar.projectName={{ sonar_project }} 
  displayName: Prepare Analysis --> Task

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: 'JaCoCo'
    codeCoverageClassFilesDirectories: {{ classes_dir }}
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    isJacocoCoverageReportXML: true
    sqMavenPluginVersionChoice: 'latest'
    checkStyleRunAnalysis: true
    pmdRunAnalysis: true
    findBugsRunAnalysis: true
  displayName: Package Artifact; run analysis --> Task
  
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'  
  displayName: Publish Analysis to SonarCloud --> Task

- task: UniversalPackages@0
  inputs:
    command: 'publish'
    publishDirectory: '$(Build.SourcesDirectory)/target/{{ artifact_name }}'
    feedsToUsePublish: 'internal'
    vstsFeedPublish: '24909f86-8d03-4826-8947-55d471b47b72/57273a34-95c4-4b34-8b08-4600b3975070'
    vstsFeedPackagePublish: {{ artifact_name }}
    versionOption: 'patch'
    packagePublishDescription: {{ artifact_name }}
    verbosity: 'Debug'
    publishedPackageVar: {{ artifact_name }}
  displayName: Publish {{ artifact_name }} as a Universal Packages Artifact --> Task

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: {{ artifact_name }}
    publishLocation: 'Container'
  displayName: Publish {{ artifact_name }} as a Build Artifact --> Task