# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- dev

resources:
- repo: self

variables:
  orm_version: 'latest'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    displayName: Build and push 
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'Jacob''s Docker Hub'
        repository: 'jpbulloch5/revature_p1_webapp'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: '$(orm_version)'
        arguments: '--build-arg orm_version=$(orm_version)'
      displayName: Build WebApp in container

- stage: Test
  displayName: Test the dockerized application network
  jobs:
  - job: Test
    displayName: System Test
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Jacob''s Docker Hub'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'up'
        arguments: '-d'
      displayName: Start the Dockerized application network

    - task: CmdLine@2
      inputs:
        script: 'docker cp airline_terminal:/app/web/P1_Local_Postman_Collection.json ./local_test.json'
        failOnStderr: true
      displayName: fetch test from container

    - task: NewmanPostman@4
      inputs:
        collectionSourceType: 'file'
        Contents: '**/local_test.json'
        environmentSourceType: 'none'
        bail: true
        reporters: 'junit'
      displayName: run the dev-defined system test using Newman Postman

- stage: Deploy
  displayName: Test the dockerized application network
  jobs:
  - job: Push
    displayName: Push WebApp image to Docker Hub
    pool:
      vmImage: ubuntu-latest
    steps:

    - task: Docker@2
      inputs:
        containerRegistry: 'Jacob''s Docker Hub'
        repository: 'jpbulloch5/revature_p1_webapp'
        command: 'push'
        tags: '$(orm_version)'
      displayName: Push WebApp image to DockerHub

  - job: Deploy
    displayName: Deploy to VM3
    pool:
      vmImage: ubuntu-latest
    steps:
    
    - task: CmdLine@2
      inputs:
        script: 'docker cp airline_terminal:/app/web/docker-compose.yml $(Build.ArtifactStagingDirectory)/airline_terminal_compose.yml'
        failOnStderr: true
      displayName: Fetch the docker compose file from the container

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'airline_terminal_compose.yml'
        publishLocation: 'Container'
      displayName: Publish the docker compose file as an artifact
    
    - task: CopyFilesOverSSH@0
      inputs:
        sshEndpoint: 'Revature VM3'
        sourceFolder: '''$(Build.ArtifactStagingDirectory)'''
        contents: 'airline_terminal_compose.yml'
        targetFolder: '/home/jacob/p1'
        readyTimeout: '20000'
      displayName: Send new docker-compose file to VM3
    
    - task: SSH@0
      inputs:
        sshEndpoint: 'Revature VM3'
        runOptions: 'commands'
        commands: |
          start_dir=$(pwd)
          cd /home/jacob/p1
          docker-compose up -d
          cd $(start_dir)
        readyTimeout: '20000'
      displayName: Start the docker container on the host

- stage: Cleanup
  displayName: Clean up loose ends
  jobs:
  - job: Close
    displayName: Close the build-agent's docker network
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: CmdLine@2
      inputs:
        script: 'docker-compose down'
      displayName: stop the Dockerized application network